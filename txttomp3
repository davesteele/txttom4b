#!/usr/bin/python

from google.oauth2 import service_account
from contextlib import contextmanager
import datetime
import time
import os
import sys
import tempfile
import subprocess
import shlex

for entry in os.listdir('.'):
    if entry[-5:] == ".json":
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = entry


@contextmanager
def rate_limit(*runtimes):
    """Limit the minimum time a task will take"""

    minruntime = max(runtimes)
    start = datetime.datetime.now()

    yield None

    duration = datetime.datetime.now() - start
    sleeptime = minruntime - duration.total_seconds()

    if sleeptime > 0:
        time.sleep(sleeptime)


def synthesize_text(text):
    """Synthesizes speech from the input string of text."""
    from google.cloud import texttospeech
    client = texttospeech.TextToSpeechClient()

    input_text = texttospeech.types.SynthesisInput(text=text)

    # Note: the voice can also be specified by name.
    # Names of voices can be retrieved with client.list_voices().
    voice = texttospeech.types.VoiceSelectionParams(name="en-US-Wavenet-C",
        language_code='en-US',)

    audio_config = texttospeech.types.AudioConfig(
        audio_encoding=texttospeech.enums.AudioEncoding.MP3)

    response = client.synthesize_speech(input_text, voice, audio_config)

    return response.audio_content

infile = sys.argv[1]
outfile = os.path.splitext(infile)[0] + ".mp3"

audios = []
for line in open(infile, 'r').read().split('\n'):
    tmpfl = tempfile.mktemp(suffix=".mp3")

    print "saving %s to %s" % (line, tmpfl)

    mp3data = synthesize_text(line)

    with open(tmpfl, 'wb') as fp:
        fp.write(mp3data)

    audios.append(tmpfl)

lstfile = tempfile.mktemp(suffix=".list")

with open(lstfile, 'w') as fp:
    fp.write('\n'.join(["file '%s'" % x for x in audios]))

cmd = "ffmpeg -y -f concat -safe 0 -i %s -c copy %s" % (lstfile, outfile)
print cmd
subprocess.call(shlex.split(cmd))

[os.remove(x) for x in audios + [lstfile]]
